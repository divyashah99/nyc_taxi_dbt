name: dbt CI

on:
  push:
    branches: [ master ]
  pull_request:

jobs:
  dbt-build:
    runs-on: ubuntu-latest

    steps:
      # 1 Check out repo
      - uses: actions/checkout@v3

      # 2 Set up Python
      - uses: actions/setup-python@v4
        with:
          python-version: 3.11

      # 3 Install dbt‑bigquery
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install "dbt-core~=1.10.0" "dbt-bigquery~=1.10.0"

      # 4 Write GCP credentials from secret
      - name: Write GCP credentials
        run: |
          mkdir -p "${HOME}"
          # Write the secret content to the file
          echo "${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}" > "${HOME}/gcp-creds.json"

       # --- DEBUGGING STEPS: ADD THESE TEMPORARILY ---
      - name: Inspect gcp-creds.json content (DEBUG - REMOVE AFTER FIX)
        run: |
          echo "--- START FILE CONTENT ---"
          # Show raw content with visible non-printable characters
          cat -v "${HOME}/gcp-creds.json"
          echo "--- END FILE CONTENT ---"
          
          echo "--- START HEX DUMP ---"
          # Show hex representation of the first few bytes
          head -c 20 "${HOME}/gcp-creds.json" | xxd
          echo "--- END HEX DUMP ---"

          echo "--- JSON VALIDATION ---"
          # Attempt to parse as JSON using 'jq' (if available)
          # 'jq' is usually pre-installed on ubuntu-latest runners
          jq . "${HOME}/gcp-creds.json" || { echo "jq failed to parse JSON, check previous output for errors." ; exit 0; }
          echo "--- END JSON VALIDATION ---"
        shell: bash # Ensure bash for piping and commands like xxd


      # 5 Run dbt
      - name: Run dbt
        run: |
          dbt deps
          dbt seed --profiles-dir . --target dev
          dbt run  --profiles-dir . --target dev
          dbt test --profiles-dir . --target dev
